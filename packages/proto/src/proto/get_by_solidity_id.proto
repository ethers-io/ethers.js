syntax = "proto3";

package proto;

/*-
 * ‌
 * Hedera Network Services Protobuf
 * ​
 * Copyright (C) 2018 - 2021 Hedera Hashgraph, LLC
 * ​
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ‍
 */

option java_package = "com.hederahashgraph.api.proto.java";
option java_multiple_files = true;

import "basic_types.proto";
import "query_header.proto";
import "response_header.proto";

/**
 * Get the IDs in the format used by transactions, given the ID in the format used by Solidity. If
 * the Solidity ID is for a smart contract instance, then both the ContractID and associated
 * AccountID will be returned.
 */
message GetBySolidityIDQuery {
    /**
     * Standard info sent from client to node, including the signed payment, and what kind of
     * response is requested (cost, state proof, both, or neither).
     */
    QueryHeader header = 1;

    /**
     * The ID in the format used by Solidity
     */
    string solidityID = 2;
}

/**
 * Response when the client sends the node GetBySolidityIDQuery
 */
message GetBySolidityIDResponse {
    /**
     * Standard response from node to client, including the requested fields: cost, or state proof,
     * or both, or neither
     */
    ResponseHeader header = 1;

    /**
     * The Account ID for the cryptocurrency account
     */
    AccountID accountID = 2;

    /**
     * The file Id for the file
     */
    FileID fileID = 3;

    /**
     * A smart contract ID for the instance (if this is included, then the associated accountID will
     * also be included)
     */
    ContractID contractID = 4;
}
