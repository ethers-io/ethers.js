syntax = "proto3";

package proto;

/*-
 * ‌
 * Hedera Network Services Protobuf
 * ​
 * Copyright (C) 2018 - 2021 Hedera Hashgraph, LLC
 * ​
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ‍
 */

option java_package = "com.hederahashgraph.api.proto.java";
option java_multiple_files = true;

import "basic_types.proto";
import "duration.proto";
import "timestamp.proto";
import "google/protobuf/wrappers.proto";

/**
 * Change properties for the given account. Any null field is ignored (left unchanged). This
 * transaction must be signed by the existing key for this account. If the transaction is changing
 * the key field, then the transaction must be signed by both the old key (from before the change)
 * and the new key. The old key must sign for security. The new key must sign as a safeguard to
 * avoid accidentally changing to an invalid key, and then having no way to recover. 
 */
message CryptoUpdateTransactionBody {
    /**
     * The account ID which is being updated in this transaction
     */
    AccountID accountIDToUpdate = 2;

    /**
     * The new key
     */
    Key key = 3;

    /**
     * ID of the account to which this account is proxy staked. If proxyAccountID is null, or is an
     * invalid account, or is an account that isn't a node, then this account is automatically proxy
     * staked to a node chosen by the network, but without earning payments. If the proxyAccountID
     * account refuses to accept proxy staking , or if it is not currently running a node, then it
     * will behave as if proxyAccountID was null.
     */
    AccountID proxyAccountID = 4;

    /**
     * [Deprecated]. Payments earned from proxy staking are shared between the node and this
     * account, with proxyFraction / 10000 going to this account
     */
    int32 proxyFraction = 5 [deprecated = true];

    oneof sendRecordThresholdField {
        /**
         * [Deprecated]. The new threshold amount (in tinybars) for which an account record is
         * created for any send/withdraw transaction
         */
        uint64 sendRecordThreshold = 6 [deprecated = true];

        /**
         * [Deprecated]. The new threshold amount (in tinybars) for which an account record is
         * created for any send/withdraw transaction
         */
        google.protobuf.UInt64Value sendRecordThresholdWrapper = 11 [deprecated = true];

    }

    oneof receiveRecordThresholdField {
        /**
         * [Deprecated]. The new threshold amount (in tinybars) for which an account record is
         * created for any receive/deposit transaction.
         */
        uint64 receiveRecordThreshold = 7 [deprecated = true];

        /**
         * [Deprecated]. The new threshold amount (in tinybars) for which an account record is
         * created for any receive/deposit transaction.
         */
        google.protobuf.UInt64Value receiveRecordThresholdWrapper = 12 [deprecated = true];
    }

    /**
     * The duration in which it will automatically extend the expiration period. If it doesn't have
     * enough balance, it extends as long as possible. If it is empty when it expires, then it is
     * deleted.
     */
    Duration autoRenewPeriod = 8;

    /**
     * The new expiration time to extend to (ignored if equal to or before the current one)
     */
    Timestamp expirationTime = 9;

    oneof receiverSigRequiredField {
        /**
         * [Deprecated] Do NOT use this field to set a false value because the server cannot
         * distinguish from the default value. Use receiverSigRequiredWrapper field for this
         * purpose.
         */
        bool receiverSigRequired = 10 [deprecated = true];

        /**
         * If true, this account's key must sign any transaction depositing into this account (in
         * addition to all withdrawals)
         */
        google.protobuf.BoolValue receiverSigRequiredWrapper = 13;
    }

    /**
     * If set, the new memo to be associated with the account (UTF-8 encoding max 100 bytes)
     */
    google.protobuf.StringValue memo = 14;

    /**
     * The maximum number of tokens that an Account can be implicitly associated with. Up to a 1000
     * including implicit and explicit associations.
     */
    google.protobuf.UInt32Value max_automatic_token_associations = 15;
}
